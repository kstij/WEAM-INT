# Weam Integration Guide for <%= appName %>

## Overview
This document explains how to integrate your **<%= appName %>** app with Weam.ai. The integration provides seamless authentication, database connectivity, and branding consistency.

## What Was Generated

### üîê Authentication Integration
- **Weam Session Middleware**: Handles iron-session cookies
- **Auth Guards**: Protects API routes with Weam authentication
- **User Context**: Provides user and company information

### üóÑÔ∏è Database Integration
- **MongoDB Connection**: Connects to Weam's database
- **User Association**: Links all data to Weam users and companies
- **Data Isolation**: Ensures users only see their own data

### üé® Branding Integration
- **Weam Logo**: Consistent branding across the app
- **Navigation**: Weam-style navigation with "Back to App" button
- **Styling**: Weam color scheme and design patterns

### üîó Proxy Integration
- **API Proxy**: Routes Weam requests to your app
- **Page Component**: Weam page for Supersolutions
- **Environment Config**: All necessary configuration

## Setup Instructions

### 1. Install Dependencies
```bash
npm install iron-session cors axios
```

### 2. Copy Generated Files
Copy the generated files from `weam-integration/` to your app:

```bash
# Copy middleware
cp weam-integration/middleware/weamSession.js ./middleware/

# Copy database files
cp weam-integration/lib/db.js ./lib/
cp weam-integration/models/* ./models/

# Copy components
cp weam-integration/components/* ./components/

# Copy environment config
cp weam-integration/.env.weam ./.env
```

### 3. Update Your App

#### Add Middleware to Your Server
```javascript
// In your main server file (server.js, index.js, etc.)
const { weamSessionMiddleware, requireWeamAuth } = require('./middleware/weamSession');

// Add session middleware
app.use(weamSessionMiddleware());

// Protect your API routes
app.use('/api', requireWeamAuth);
```

#### Update Your Models
```javascript
// In your existing models, add Weam fields
const { weamUserFields, weamTimestamps } = require('../lib/db');

const yourSchema = new mongoose.Schema({
  // Your existing fields
  ...yourExistingFields,
  
  // Add Weam integration
  ...weamUserFields,
  ...weamTimestamps
});
```

#### Add Weam Branding
```javascript
// In your main layout/header component
import WeamNavigation from './components/WeamNavigation';

function App() {
  return (
    <div>
      <WeamNavigation />
      {/* Your existing app content */}
    </div>
  );
}
```

### 4. Deploy to Weam

#### Add to Weam's Supersolutions
1. Copy the proxy route to Weam's API directory:
   ```bash
   cp weam-integration/weam-proxy/[...path]/route.ts /path/to/weam/src/app/api/<%= appName.toLowerCase() %>/
   ```

2. Copy the page component to Weam's pages:
   ```bash
   cp weam-integration/weam-page/page.tsx /path/to/weam/src/app/(page)/settings/super-solution/<%= appName.toLowerCase() %>/
   ```

3. Add to Weam's navigation menu

## Testing Your Integration

### 1. Test Authentication
```bash
# Start your app
npm start

# Test the auth endpoint
curl http://localhost:<%= port %>/api/auth/me
```

### 2. Test Database
```bash
# Check if models are created with user fields
# Verify data isolation between users
```

### 3. Test Weam Integration
1. Log into Weam.ai
2. Navigate to Supersolutions
3. Click on <%= appName %>
4. Verify the app loads with Weam branding

## Troubleshooting

### Common Issues

#### 1. Authentication Not Working
- Check if `WEAM_COOKIE_PASSWORD` matches Weam's configuration
- Verify the cookie name is `weam`
- Ensure CORS is configured correctly

#### 2. Database Connection Issues
- Verify MongoDB is running
- Check `MONGODB_URI` in your environment
- Ensure database permissions are correct

#### 3. Proxy Not Working
- Check if your app is running on port <%= port %>
- Verify the proxy route is correctly placed in Weam
- Check browser console for CORS errors

### Getting Help
- Check the Weam documentation
- Review the generated code comments
- Test each component individually

## Next Steps

1. **Customize Branding**: Modify the Weam components to match your app's style
2. **Add Features**: Extend the integration with additional Weam features
3. **Optimize Performance**: Add caching and optimization
4. **Monitor Usage**: Set up analytics and monitoring

## Support
For integration support, contact the Weam team or check the documentation at https://docs.weam.ai/integrations.

---

**Generated by AI App Integrator v1.0.0**
**Integration Date**: <%= new Date().toISOString() %>
**App**: <%= appName %>
**Framework**: <%= appInfo.framework %>
